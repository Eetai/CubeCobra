/* Define consistent variables for card sizing */
:root {
  --card-width: 140px;
  --card-min-height: 215px; /* Back to fixed height that worked */
  --card-aspect-ratio: 63/88;
  --card-grid-gap: 16px;
  --card-margin-bottom: 8px;
  --card-container-padding: 8px;
}

/* Base drag overlay styles */
[data-dnd-overlay="true"] {
  pointer-events: none;
  cursor: grabbing;
  position: fixed;
  z-index: 9999;
  inset: auto;
  width: 0;
  height: 0;
  overflow: visible;
  margin: 0;
  transform: none;
}

[data-dnd-overlay="true"] > * {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.card-drag-overlay {
  width: var(--card-width);
  pointer-events: none;
  z-index: 9999;
  opacity: 0.8;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
}

/* Clean base grid layout */
.pack-cards-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(var(--card-width), 1fr));
  gap: var(--card-grid-gap) !important;
  width: 100%;
  padding: var(--card-container-padding) !important;
}

/* Card item sizing - consistent across states */
.pack-card-item {
  width: 100%;
  margin-bottom: var(--card-margin-bottom);
  height: var(--card-min-height) !important;
  min-height: var(--card-min-height) !important;
  max-height: var(--card-min-height) !important;
}

/* Container for all cards */
.card-container {
  position: relative;
  width: 100%;
  min-height: var(--card-min-height);
  perspective: 1200px;
  margin-bottom: var(--card-margin-bottom);
  height: var(--card-min-height) !important;
}

/* Card structure elements */
.card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
}

.card-face {
  position: absolute;
  width: 100%;
  height: 100%;
  min-height: var(--card-min-height);
  backface-visibility: hidden;
}

/* Image sizing with consistent aspect ratio */
img.card-img {
  width: 100%;
  height: auto;
  aspect-ratio: var(--card-aspect-ratio);
  object-fit: contain;
}

/* Animation-specific styles */
body:not(:has(#toggle-animations:checked)) .card-inner,
:not(.animations-disabled) .card-inner {
  transform-style: preserve-3d;
}

.perspective-\[1200px\] {
  min-height: var(--card-min-height);
  width: 100%;
  margin-bottom: 0;
}

/* Card image wrapper */
.card-image-wrapper {
  position: relative;
  width: 100%;
  margin-bottom: 0;
  height: var(--card-min-height) !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

/* Rating badge styling - simplified to single class */
.fixed-rating-badge {
  position: absolute !important;
  bottom: 16px !important; /* Increased from 8px to move badge up */
  left: 50% !important;
  transform: translateX(-50%) !important;
  z-index: 999 !important; /* Ensure it's always on top */
  min-width: 2.5rem !important;
  padding: 0.125rem 0.5rem !important;
  text-align: center !important;
  font-size: 0.875rem !important;
  font-weight: 600 !important;
  color: white !important;
  border-radius: 0.375rem !important;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1) !important;
  backdrop-filter: blur(2px) !important;
  white-space: nowrap !important;
  pointer-events: none !important;
  background-color: rgba(55, 65, 81, 0.8) !important;
}

/* Add back styling for highest-rated badge */
.fixed-rating-badge.highest-rated {
  background-color: rgba(0, 123, 255, 0.95) !important; /* Blue background */
  font-weight: 700 !important;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2) !important;
}

/* Ensure highest-rated card styling through CardGrid compatibility */
.ring-\[\#007BFF\] ~ .fixed-rating-badge,
.ring-\[\#087715\] ~ .fixed-rating-badge {
  background-color: rgba(0, 123, 255, 0.95) !important;
  font-weight: 700 !important;
}

/* Stacked cards in deck area */
.stacked {
  margin-top: -124%;
  min-height: var(--card-min-height);
}

/* Prevent unwanted transitions that could impact spacing */
.card-inner,
.card-face,
.card-image-wrapper,
.pack-card-item {
  transition: none !important;
}

/* Force animated divs to have exact same height */
a.div.absolute.w-full.h-full.backface-hidden.preserve-3d,
div.absolute.w-full.h-full.backface-hidden.preserve-3d {
  height: var(--card-min-height) !important;
}

/* Target the specific a.div from react-spring that might have different sizing */
[style*="transform: perspective"] {
  height: var(--card-min-height) !important;
}

/* Fix for badge placement in non-animated state */
body:has(#toggle-animations:checked) .fixed-rating-badge,
.animations-disabled .fixed-rating-badge {
  bottom: 16px !important;
}

/* Fix for badge placement in animated state */
body:not(:has(#toggle-animations:checked)) .fixed-rating-badge,
:not(.animations-disabled) .fixed-rating-badge {
  bottom: 16px !important;
}

/* Add positioning context for badge container */
.card-image-wrapper, 
.relative.w-full.h-full,
.relative.w-full.min-h-\[196px\] {
  position: relative !important;
}

/* Ensure badges have proper positioning for all children containers */
.perspective-\[1200px\] .fixed-rating-badge,
.card-image-wrapper .fixed-rating-badge,
.relative.w-full.h-full .fixed-rating-badge {
  bottom: 16px !important;
}

/* Force consistent sizing for badge container to prevent any shifts */
.perspective-\[1200px\], 
.card-image-wrapper, 
.relative.w-full.h-full {
  height: var(--card-min-height) !important;
  min-height: var(--card-min-height) !important;
}